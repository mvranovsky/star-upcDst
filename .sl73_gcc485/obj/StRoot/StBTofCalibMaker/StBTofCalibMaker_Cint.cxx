//
// File generated by rootcint at Tue Mar  4 15:17:38 2025

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOsl73_gcc485dIobjdIStRootdIStBTofCalibMakerdIStBTofCalibMaker_Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "StBTofCalibMaker_Cint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void StBTofCalibMaker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StBTofCalibMaker(void *p = 0);
   static void *newArray_StBTofCalibMaker(Long_t size, void *p);
   static void delete_StBTofCalibMaker(void *p);
   static void deleteArray_StBTofCalibMaker(void *p);
   static void destruct_StBTofCalibMaker(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StBTofCalibMaker*)
   {
      ::StBTofCalibMaker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StBTofCalibMaker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StBTofCalibMaker", ::StBTofCalibMaker::Class_Version(), ".sl73_gcc485/obj/StRoot/StBTofCalibMaker/StBTofCalibMaker.h", 108,
                  typeid(::StBTofCalibMaker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StBTofCalibMaker::Dictionary, isa_proxy, 4,
                  sizeof(::StBTofCalibMaker) );
      instance.SetNew(&new_StBTofCalibMaker);
      instance.SetNewArray(&newArray_StBTofCalibMaker);
      instance.SetDelete(&delete_StBTofCalibMaker);
      instance.SetDeleteArray(&deleteArray_StBTofCalibMaker);
      instance.SetDestructor(&destruct_StBTofCalibMaker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StBTofCalibMaker*)
   {
      return GenerateInitInstanceLocal((::StBTofCalibMaker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StBTofCalibMaker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr StBTofCalibMaker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StBTofCalibMaker::Class_Name()
{
   return "StBTofCalibMaker";
}

//______________________________________________________________________________
const char *StBTofCalibMaker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StBTofCalibMaker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StBTofCalibMaker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StBTofCalibMaker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StBTofCalibMaker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StBTofCalibMaker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StBTofCalibMaker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StBTofCalibMaker*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void StBTofCalibMaker::Streamer(TBuffer &R__b)
{
   // Stream an object of class StBTofCalibMaker.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StBTofCalibMaker::Class(),this);
   } else {
      R__b.WriteClassBuffer(StBTofCalibMaker::Class(),this);
   }
}

//______________________________________________________________________________
void StBTofCalibMaker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StBTofCalibMaker.
      TClass *R__cl = ::StBTofCalibMaker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mZCalibType", &mZCalibType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTotCalibType", &mTotCalibType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mValidCalibPar", &mValidCalibPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mValidStartTime", &mValidStartTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mVPDEastHitsCut", &mVPDEastHitsCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mVPDWestHitsCut", &mVPDWestHitsCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTofTotEdge[120][32][6][60]", mTofTotEdge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTofTotCorr[120][32][6][60]", mTofTotCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTofZEdge[120][32][6][60]", mTofZEdge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTofZCorr[120][32][6][60]", mTofZCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTofTZero[120][32][6]", mTofTZero);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mVPDLeTime[38]", mVPDLeTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTSumEast", &mTSumEast);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTSumWest", &mTSumWest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTSumEastSigma", &mTSumEastSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTSumWestSigma", &mTSumWestSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mVPDHitPatternEast", &mVPDHitPatternEast);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mVPDHitPatternWest", &mVPDHitPatternWest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNEast", &mNEast);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNWest", &mNWest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mVPDVtxZ", &mVPDVtxZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mProjVtxZ", &mProjVtxZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEvtVtxZ", &mEvtVtxZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTDiff", &mTDiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTStart", &mTStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNTzero", &mNTzero);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mBeamHelix", &mBeamHelix);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mEvent", &mEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mBTofHeader", &mBTofHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMuDst", &mMuDst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMuDstIn", &mMuDstIn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isMcFlag", &isMcFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mOuterGeometry", &mOuterGeometry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSlewingCorr", &mSlewingCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mUseEventVertex", &mUseEventVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mInitFromFile", &mInitFromFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mUseVpdStart", &mUseVpdStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mForceTStartZero", &mForceTStartZero);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mFXTMode", &mFXTMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mVpdResConfig", &mVpdResConfig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mVpdRes", (void*)&mVpdRes);
      R__insp.InspectMember("map<int,StVpdSimConfig::SingleTubeParams>", (void*)&mVpdRes, "mVpdRes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mBTofRes", &mBTofRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCalibFilePvpd", (void*)&mCalibFilePvpd);
      R__insp.InspectMember("string", (void*)&mCalibFilePvpd, "mCalibFilePvpd.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCalibFileTot", (void*)&mCalibFileTot);
      R__insp.InspectMember("string", (void*)&mCalibFileTot, "mCalibFileTot.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCalibFileZhit", (void*)&mCalibFileZhit);
      R__insp.InspectMember("string", (void*)&mCalibFileZhit, "mCalibFileZhit.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCalibFileT0", (void*)&mCalibFileT0);
      R__insp.InspectMember("string", (void*)&mCalibFileT0, "mCalibFileT0.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mHisto", &mHisto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mHistoFileName", (void*)&mHistoFileName);
      R__insp.InspectMember("string", (void*)&mHistoFileName, "mHistoFileName.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hEventCounter", &hEventCounter);
      StMaker::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StBTofCalibMaker(void *p) {
      return  p ? new(p) ::StBTofCalibMaker : new ::StBTofCalibMaker;
   }
   static void *newArray_StBTofCalibMaker(Long_t nElements, void *p) {
      return p ? new(p) ::StBTofCalibMaker[nElements] : new ::StBTofCalibMaker[nElements];
   }
   // Wrapper around operator delete
   static void delete_StBTofCalibMaker(void *p) {
      delete ((::StBTofCalibMaker*)p);
   }
   static void deleteArray_StBTofCalibMaker(void *p) {
      delete [] ((::StBTofCalibMaker*)p);
   }
   static void destruct_StBTofCalibMaker(void *p) {
      typedef ::StBTofCalibMaker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StBTofCalibMaker

namespace ROOTDict {
   void maplEintcOStVpdSimConfigcLcLSingleTubeParamsgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOStVpdSimConfigcLcLSingleTubeParamsgR_Dictionary();
   static void *new_maplEintcOStVpdSimConfigcLcLSingleTubeParamsgR(void *p = 0);
   static void *newArray_maplEintcOStVpdSimConfigcLcLSingleTubeParamsgR(Long_t size, void *p);
   static void delete_maplEintcOStVpdSimConfigcLcLSingleTubeParamsgR(void *p);
   static void deleteArray_maplEintcOStVpdSimConfigcLcLSingleTubeParamsgR(void *p);
   static void destruct_maplEintcOStVpdSimConfigcLcLSingleTubeParamsgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,StVpdSimConfig::SingleTubeParams>*)
   {
      map<int,StVpdSimConfig::SingleTubeParams> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,StVpdSimConfig::SingleTubeParams>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,StVpdSimConfig::SingleTubeParams>", -2, "prec_stl/map", 63,
                  typeid(map<int,StVpdSimConfig::SingleTubeParams>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOStVpdSimConfigcLcLSingleTubeParamsgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,StVpdSimConfig::SingleTubeParams>) );
      instance.SetNew(&new_maplEintcOStVpdSimConfigcLcLSingleTubeParamsgR);
      instance.SetNewArray(&newArray_maplEintcOStVpdSimConfigcLcLSingleTubeParamsgR);
      instance.SetDelete(&delete_maplEintcOStVpdSimConfigcLcLSingleTubeParamsgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOStVpdSimConfigcLcLSingleTubeParamsgR);
      instance.SetDestructor(&destruct_maplEintcOStVpdSimConfigcLcLSingleTubeParamsgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,StVpdSimConfig::SingleTubeParams> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,StVpdSimConfig::SingleTubeParams>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOStVpdSimConfigcLcLSingleTubeParamsgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,StVpdSimConfig::SingleTubeParams>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOStVpdSimConfigcLcLSingleTubeParamsgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,StVpdSimConfig::SingleTubeParams> : new map<int,StVpdSimConfig::SingleTubeParams>;
   }
   static void *newArray_maplEintcOStVpdSimConfigcLcLSingleTubeParamsgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,StVpdSimConfig::SingleTubeParams>[nElements] : new map<int,StVpdSimConfig::SingleTubeParams>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOStVpdSimConfigcLcLSingleTubeParamsgR(void *p) {
      delete ((map<int,StVpdSimConfig::SingleTubeParams>*)p);
   }
   static void deleteArray_maplEintcOStVpdSimConfigcLcLSingleTubeParamsgR(void *p) {
      delete [] ((map<int,StVpdSimConfig::SingleTubeParams>*)p);
   }
   static void destruct_maplEintcOStVpdSimConfigcLcLSingleTubeParamsgR(void *p) {
      typedef map<int,StVpdSimConfig::SingleTubeParams> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,StVpdSimConfig::SingleTubeParams>

/********************************************************
* .sl73_gcc485/obj/StRoot/StBTofCalibMaker/StBTofCalibMaker_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableStBTofCalibMaker_Cint();

extern "C" void G__set_cpp_environmentStBTofCalibMaker_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("StBTofCalibMaker.h");
  G__cpp_reset_tagtableStBTofCalibMaker_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevStBTofCalibMaker_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* StBTofCalibMaker */
static int G__StBTofCalibMaker_Cint_628_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StBTofCalibMaker* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StBTofCalibMaker((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) StBTofCalibMaker((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StBTofCalibMaker[n];
       } else {
         p = new((void*) gvp) StBTofCalibMaker[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StBTofCalibMaker;
       } else {
         p = new((void*) gvp) StBTofCalibMaker;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofCalibMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofCalibMaker_Cint_628_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((StBTofCalibMaker*) G__getstructoffset())->setOuterGeometry((const bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((StBTofCalibMaker*) G__getstructoffset())->setOuterGeometry();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofCalibMaker_Cint_628_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((StBTofCalibMaker*) G__getstructoffset())->setSlewingCorr((const bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((StBTofCalibMaker*) G__getstructoffset())->setSlewingCorr();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofCalibMaker_Cint_628_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StBTofCalibMaker*) G__getstructoffset())->setUseEventVertex((const bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofCalibMaker_Cint_628_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StBTofCalibMaker*) G__getstructoffset())->setVPDHitsCut((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofCalibMaker_Cint_628_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((StBTofCalibMaker*) G__getstructoffset())->setMuDstIn((const bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((StBTofCalibMaker*) G__getstructoffset())->setMuDstIn();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofCalibMaker_Cint_628_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((StBTofCalibMaker*) G__getstructoffset())->setFXTMode((const Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((StBTofCalibMaker*) G__getstructoffset())->setFXTMode();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofCalibMaker_Cint_628_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((StBTofCalibMaker*) G__getstructoffset())->setCreateHistoFlag((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((StBTofCalibMaker*) G__getstructoffset())->setCreateHistoFlag();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofCalibMaker_Cint_628_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StBTofCalibMaker*) G__getstructoffset())->setHistoFileName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofCalibMaker_Cint_628_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((StBTofCalibMaker*) G__getstructoffset())->setInitFromFile((const Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((StBTofCalibMaker*) G__getstructoffset())->setInitFromFile();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofCalibMaker_Cint_628_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StBTofCalibMaker*) G__getstructoffset())->setCalibFilePvpd((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofCalibMaker_Cint_628_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StBTofCalibMaker*) G__getstructoffset())->setCalibFileTot((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofCalibMaker_Cint_628_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StBTofCalibMaker*) G__getstructoffset())->setCalibFileZhit((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofCalibMaker_Cint_628_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StBTofCalibMaker*) G__getstructoffset())->setCalibFileT0((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofCalibMaker_Cint_628_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StBTofCalibMaker*) G__getstructoffset())->getZCalibType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofCalibMaker_Cint_628_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StBTofCalibMaker*) G__getstructoffset())->getTotCalibType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofCalibMaker_Cint_628_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StBTofCalibMaker*) G__getstructoffset())->forceTStartZero();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofCalibMaker_Cint_628_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StBTofCalibMaker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofCalibMaker_Cint_628_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StBTofCalibMaker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofCalibMaker_Cint_628_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StBTofCalibMaker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofCalibMaker_Cint_628_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StBTofCalibMaker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofCalibMaker_Cint_628_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StBTofCalibMaker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofCalibMaker_Cint_628_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StBTofCalibMaker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofCalibMaker_Cint_628_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StBTofCalibMaker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofCalibMaker_Cint_628_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StBTofCalibMaker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofCalibMaker_Cint_628_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StBTofCalibMaker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StBTofCalibMaker_Cint_628_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StBTofCalibMaker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StBTofCalibMaker(*(StBTofCalibMaker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofCalibMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StBTofCalibMaker G__TStBTofCalibMaker;
static int G__StBTofCalibMaker_Cint_628_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StBTofCalibMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StBTofCalibMaker*) (soff+(sizeof(StBTofCalibMaker)*i)))->~G__TStBTofCalibMaker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StBTofCalibMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StBTofCalibMaker*) (soff))->~G__TStBTofCalibMaker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* StBTofCalibMaker */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncStBTofCalibMaker_Cint {
 public:
  G__Sizep2memfuncStBTofCalibMaker_Cint(): p(&G__Sizep2memfuncStBTofCalibMaker_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncStBTofCalibMaker_Cint::*p)();
};

size_t G__get_sizep2memfuncStBTofCalibMaker_Cint()
{
  G__Sizep2memfuncStBTofCalibMaker_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceStBTofCalibMaker_Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofCalibMaker))) {
     StBTofCalibMaker *G__Lderived;
     G__Lderived=(StBTofCalibMaker*)0x1000;
     {
       StMaker *G__Lpbase=(StMaker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofCalibMaker),G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StMaker),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDataSet *G__Lpbase=(TDataSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofCalibMaker),G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_TDataSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofCalibMaker),G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofCalibMaker),G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableStBTofCalibMaker_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Long_t>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_vectorlElongcOallocatorlElonggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<std::string,std::string>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_pairlEstringcOstringgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<string,std::string>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_pairlEstringcOstringgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::pair<std::string,std::string>,UInt_t>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_maplEpairlEstringcOstringgRcOunsignedsPintcOlesslEpairlEstringcOstringgRsPgRcOallocatorlEpairlEconstsPpairlEstringcOstringgRcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<string,std::string>,UInt_t>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_maplEpairlEstringcOstringgRcOunsignedsPintcOlesslEpairlEstringcOstringgRsPgRcOallocatorlEpairlEconstsPpairlEstringcOstringgRcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<string,string>,unsigned int>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_maplEpairlEstringcOstringgRcOunsignedsPintcOlesslEpairlEstringcOstringgRsPgRcOallocatorlEpairlEconstsPpairlEstringcOstringgRcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<string,string>,unsigned int,less<pair<string,string> > >",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_maplEpairlEstringcOstringgRcOunsignedsPintcOlesslEpairlEstringcOstringgRsPgRcOallocatorlEpairlEconstsPpairlEstringcOstringgRcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,SingleTubeParams>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_maplEintcOStVpdSimConfigcLcLSingleTubeParamscOlesslEintgRcOallocatorlEpairlEconstsPintcOStVpdSimConfigcLcLSingleTubeParamsgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,StVpdSimConfig::SingleTubeParams>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_maplEintcOStVpdSimConfigcLcLSingleTubeParamscOlesslEintgRcOallocatorlEpairlEconstsPintcOStVpdSimConfigcLcLSingleTubeParamsgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,StVpdSimConfig::SingleTubeParams,less<int> >",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_maplEintcOStVpdSimConfigcLcLSingleTubeParamscOlesslEintgRcOallocatorlEpairlEconstsPintcOStVpdSimConfigcLcLSingleTubeParamsgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* StBTofCalibMaker */
static void G__setup_memvarStBTofCalibMaker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofCalibMaker));
   { StBTofCalibMaker *p; p=(StBTofCalibMaker*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofCalibMakercLcLcalibtype),-1,-2,1,G__FastAllocString(2048).Format("NOTSET=%lldLL",(long long)StBTofCalibMaker::NOTSET).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofCalibMakercLcLcalibtype),-1,-2,1,G__FastAllocString(2048).Format("BOARDCALIB=%lldLL",(long long)StBTofCalibMaker::BOARDCALIB).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofCalibMakercLcLcalibtype),-1,-2,1,G__FastAllocString(2048).Format("MODULECALIB=%lldLL",(long long)StBTofCalibMaker::MODULECALIB).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofCalibMakercLcLcalibtype),-1,-2,1,G__FastAllocString(2048).Format("CELLCALIB=%lldLL",(long long)StBTofCalibMaker::CELLCALIB).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofCalibMakercLcLcalibtype),-1,-1,4,"mZCalibType=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofCalibMakercLcLcalibtype),-1,-1,4,"mTotCalibType=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofCalibMakercLcLdA),-1,-2,4,"mNTOF=192LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofCalibMakercLcLdA),-1,-2,4,"mNTDIG=8LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofCalibMakercLcLdA),-1,-2,4,"mNModule=32LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofCalibMakercLcLdA),-1,-2,4,"mNVPD=19LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofCalibMakercLcLdA),-1,-2,4,"mNCell=6LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofCalibMakercLcLdA),-1,-2,4,"mNBinMax=60LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofCalibMakercLcLdA),-1,-2,4,"mNTray=120LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofCalibMakercLcLdA),-1,-2,4,"mWestVpdTrayId=121LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofCalibMakercLcLdA),-1,-2,4,"mEastVpdTrayId=122LL",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"VHRBIN2PS=",0,"Very High resolution mode, pico-second per bin");
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"HRBIN2PS=",0,"High resolution mode, pico-second per bin");
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"TMAX=",0,"tdc limit");
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"VZDIFFCUT=",0,"VzVpd - VzProj cut");
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"DCARCUT=",0,"dcaR cut");
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"mC_Light=",0,"= C_C_LIGHT/1.e9;");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"mValidCalibPar=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"mValidStartTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mVPDEastHitsCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mVPDWestHitsCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mTofTotEdge[120][32][6][60]=",0,"!From Double_t to Float_t");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mTofTotCorr[120][32][6][60]=",0,"! from board-by-board to cell-by-cell");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mTofZEdge[120][32][6][60]=",0,"! boards now filled 24 times");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mTofZCorr[120][32][6][60]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mTofTZero[120][32][6]=",0,"! cell-by-cell T0");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mVPDLeTime[38]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mTSumEast=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mTSumWest=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mTSumEastSigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mTSumWestSigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"mVPDHitPatternEast=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"mVPDHitPatternWest=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mNEast=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mNWest=",0,"! for Run8 to save time, these stored first");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mVPDVtxZ=",0,"! vertex z from VPD");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mProjVtxZ=",0,"! vertex z from track projection, track closest to beam line");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mEvtVtxZ=",0,"! vertex z from event vertex (mostly TPC vertex)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mTDiff=",0,"! time difference between east and west");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mTStart=",0,"! start time");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mNTzero=",0,"! number of hits used in T0 (non-vpd-start)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StPhysicalHelix),G__defined_typename("StPhysicalHelixD"),-1,4,"mBeamHelix=",0,"! beamline helix used for Run 8");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StEvent),-1,-1,4,"mEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofHeader),-1,-1,4,"mBTofHeader=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StMuDst),-1,-1,4,"mMuDst=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"mMuDstIn=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isMcFlag=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"mOuterGeometry=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"mSlewingCorr=",0,"! switch for slewing correction since run 8");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"mUseEventVertex=",0,"! switch for using event vertices");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"mInitFromFile=",0,"! switch for reading from files");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"mUseVpdStart=",0,"! switch for vpd start");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"mForceTStartZero=",0,"!switch to allow totally startless bTOF");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"mFXTMode=",0,"! FXT mode, protons included in calculating T0");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StVpdSimConfig),-1,-1,4,"mVpdResConfig=",0,"! database access VPD resolutions");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_maplEintcOStVpdSimConfigcLcLSingleTubeParamscOlesslEintgRcOallocatorlEpairlEconstsPintcOStVpdSimConfigcLcLSingleTubeParamsgRsPgRsPgR),G__defined_typename("map<int,StVpdSimConfig::SingleTubeParams>"),-1,4,"mVpdRes=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofSimResParams),-1,-1,4,"mBTofRes=",0,"! database access BTOF resolutions");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_string),-1,-1,4,"mCalibFilePvpd=",0,"! filename for pvpd calibration parameters");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_string),-1,-1,4,"mCalibFileTot=",0,"! filename for ToT calibration parameters");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_string),-1,-1,4,"mCalibFileZhit=",0,"! filename for Zhit calibration parameters");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_string),-1,-1,4,"mCalibFileT0=",0,"! filename for T0 calibration parameters");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"mHisto=",0,"! switch to fill QA histograms");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_string),-1,-1,4,"mHistoFileName=",0,"! histogram file name");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_TH1D),-1,-1,4,"hEventCounter=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarStBTofCalibMaker_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncStBTofCalibMaker(void) {
   /* StBTofCalibMaker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofCalibMaker));
   G__memfunc_setup("StBTofCalibMaker",1533,G__StBTofCalibMaker_Cint_628_0_1, 105, G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofCalibMaker), -1, 0, 1, 1, 1, 0, "C - - 10 '\"btofCalib\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitRun",713,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FinishRun",918,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Make",382,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finish",609,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setOuterGeometry",1703,G__StBTofCalibMaker_Cint_628_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 10 'kTRUE' val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSlewingCorr",1467,G__StBTofCalibMaker_Cint_628_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 10 'kTRUE' val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setUseEventVertex",1785,G__StBTofCalibMaker_Cint_628_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 10 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVPDHitsCut",1274,G__StBTofCalibMaker_Cint_628_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 10 - ieast i - 'Int_t' 10 - iwest", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMuDstIn",1008,G__StBTofCalibMaker_Cint_628_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 10 'kTRUE' val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFXTMode",963,G__StBTofCalibMaker_Cint_628_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 10 'kTRUE' val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCreateHistoFlag",1825,G__StBTofCalibMaker_Cint_628_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' histos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHistoFileName",1620,G__StBTofCalibMaker_Cint_628_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInitFromFile",1524,G__StBTofCalibMaker_Cint_628_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 10 'kTRUE' val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCalibFilePvpd",1601,G__StBTofCalibMaker_Cint_628_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCalibFileTot",1502,G__StBTofCalibMaker_Cint_628_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCalibFileZhit",1606,G__StBTofCalibMaker_Cint_628_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCalibFileT0",1323,G__StBTofCalibMaker_Cint_628_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZCalibType",1303,G__StBTofCalibMaker_Cint_628_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTotCalibType",1524,G__StBTofCalibMaker_Cint_628_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("forceTStartZero",1553,G__StBTofCalibMaker_Cint_628_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetPars",953,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initEvent",950,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetVpd",845,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("loadVpdData",1092,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeStartTime",1480,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initParameters",1480,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "i - 'Int_t' 0 - runnumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("processStEvent",1480,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("processMuDst",1260,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cleanCalibMuDst",1483,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cleanCalib",990,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'StMuBTofPidTraits' - 1 - -", "! functions to clean up calib done before in MuDst", (void*) NULL, 0);
   G__memfunc_setup("tstart",674,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"d - 'Double_t' 10 - Vz D - 'Double_t' 0 - tstart "
"D - 'Double_t' 0 - tdiff", "! tstart calculation splitted into 2 steps", (void*) NULL, 0);
   G__memfunc_setup("tofAllCorr",1016,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 4, 0, 
"d - 'Double_t' 10 - tof d - 'Double_t' 10 - tot "
"d - 'Double_t' 10 - zlocal i - 'Int_t' 10 - iTray "
"i - 'Int_t' 10 - iModuleChan", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tstart_NoVpd",1256,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"U 'StBTofCollection' - 10 - btofCollection U 'StPrimaryVertex' - 10 - pVtx "
"D - 'Double_t' 0 - tstart", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tstart_NoVpd",1256,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"U 'StMuDst' - 10 - muDst U 'StMuPrimaryVertex' - 10 - pVtx "
"D - 'Double_t' 0 - tstart", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tofCellResolution",1789,(G__InterfaceMethod) NULL, 102, -1, -1, 0, 2, 1, 4, 0, 
"i - 'Int_t' 10 - iTray i - 'Int_t' 10 - iModuleChan", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bookHistograms",1484,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeHistograms",1612,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCVS",524,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 0, 1, 4, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__StBTofCalibMaker_Cint_628_0_41, 85, G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StBTofCalibMaker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StBTofCalibMaker_Cint_628_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StBTofCalibMaker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StBTofCalibMaker_Cint_628_0_43, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StBTofCalibMaker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StBTofCalibMaker_Cint_628_0_44, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StBTofCalibMaker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StBTofCalibMaker_Cint_628_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StBTofCalibMaker_Cint_628_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StBTofCalibMaker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StBTofCalibMaker_Cint_628_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StBTofCalibMaker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StBTofCalibMaker_Cint_628_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StBTofCalibMaker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StBTofCalibMaker_Cint_628_0_52, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StBTofCalibMaker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StBTofCalibMaker", 1533, G__StBTofCalibMaker_Cint_628_0_53, (int) ('i'), G__get_linked_tagnum(&G__StBTofCalibMaker_CintLN_StBTofCalibMaker), -1, 0, 1, 1, 1, 0, "u 'StBTofCalibMaker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StBTofCalibMaker", 1659, G__StBTofCalibMaker_Cint_628_0_54, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncStBTofCalibMaker_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalStBTofCalibMaker_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcStBTofCalibMaker_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__StBTofCalibMaker_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_vectorlElongcOallocatorlElonggRsPgR = { "vector<long,allocator<long> >" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_TDataSet = { "TDataSet" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_StMaker = { "StMaker" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_StEvent = { "StEvent" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_StPrimaryVertex = { "StPrimaryVertex" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_StBTofCollection = { "StBTofCollection" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_StBTofHeader = { "StBTofHeader" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_StMuDst = { "StMuDst" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_StMuPrimaryVertex = { "StMuPrimaryVertex" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_StMuBTofPidTraits = { "StMuBTofPidTraits" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_StVpdSimConfig = { "StVpdSimConfig" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_StBTofSimResParams = { "StBTofSimResParams" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_StPhysicalHelix = { "StPhysicalHelix" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_pairlEstringcOstringgR = { "pair<string,string>" , 115 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_maplEpairlEstringcOstringgRcOunsignedsPintcOlesslEpairlEstringcOstringgRsPgRcOallocatorlEpairlEconstsPpairlEstringcOstringgRcOunsignedsPintgRsPgRsPgR = { "map<pair<string,string>,unsigned int,less<pair<string,string> >,allocator<pair<const pair<string,string>,unsigned int> > >" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_maplEintcOStVpdSimConfigcLcLSingleTubeParamscOlesslEintgRcOallocatorlEpairlEconstsPintcOStVpdSimConfigcLcLSingleTubeParamsgRsPgRsPgR = { "map<int,StVpdSimConfig::SingleTubeParams,less<int>,allocator<pair<const int,StVpdSimConfig::SingleTubeParams> > >" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_StBTofCalibMaker = { "StBTofCalibMaker" , 99 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_StBTofCalibMakercLcLcalibtype = { "StBTofCalibMaker::calibtype" , 101 , -1 };
G__linked_taginfo G__StBTofCalibMaker_CintLN_StBTofCalibMakercLcLdA = { "StBTofCalibMaker::$" , 101 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableStBTofCalibMaker_Cint() {
  G__StBTofCalibMaker_CintLN_TClass.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_TBuffer.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_TMemberInspector.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_TObject.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_TNamed.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_vectorlElongcOallocatorlElonggRsPgR.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_string.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_TDataSet.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_TH1D.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_StMaker.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_StEvent.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_StPrimaryVertex.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_StBTofCollection.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_StBTofHeader.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_StMuDst.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_StMuPrimaryVertex.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_StMuBTofPidTraits.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_StVpdSimConfig.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_StBTofSimResParams.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_StPhysicalHelix.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_pairlEstringcOstringgR.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_maplEpairlEstringcOstringgRcOunsignedsPintcOlesslEpairlEstringcOstringgRsPgRcOallocatorlEpairlEconstsPpairlEstringcOstringgRcOunsignedsPintgRsPgRsPgR.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_maplEintcOStVpdSimConfigcLcLSingleTubeParamscOlesslEintgRcOallocatorlEpairlEconstsPintcOStVpdSimConfigcLcLSingleTubeParamsgRsPgRsPgR.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_StBTofCalibMaker.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_StBTofCalibMakercLcLcalibtype.tagnum = -1 ;
  G__StBTofCalibMaker_CintLN_StBTofCalibMakercLcLdA.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableStBTofCalibMaker_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_TNamed);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_vectorlElongcOallocatorlElonggRsPgR);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_string);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_TDataSet);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_TH1D);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_StMaker);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_StEvent);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_StPrimaryVertex);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_StBTofCollection);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_StBTofHeader);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_StMuDst);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_StMuPrimaryVertex);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_StMuBTofPidTraits);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_StVpdSimConfig);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_StBTofSimResParams);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_StPhysicalHelix);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_pairlEstringcOstringgR);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_maplEpairlEstringcOstringgRcOunsignedsPintcOlesslEpairlEstringcOstringgRsPgRcOallocatorlEpairlEconstsPpairlEstringcOstringgRcOunsignedsPintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_maplEintcOStVpdSimConfigcLcLSingleTubeParamscOlesslEintgRcOallocatorlEpairlEconstsPintcOStVpdSimConfigcLcLSingleTubeParamsgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_StBTofCalibMaker),sizeof(StBTofCalibMaker),-1,324864,(char*)NULL,G__setup_memvarStBTofCalibMaker,G__setup_memfuncStBTofCalibMaker);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_StBTofCalibMakercLcLcalibtype);
   G__get_linked_tagnum_fwd(&G__StBTofCalibMaker_CintLN_StBTofCalibMakercLcLdA);
}
extern "C" void G__cpp_setupStBTofCalibMaker_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupStBTofCalibMaker_Cint()");
  G__set_cpp_environmentStBTofCalibMaker_Cint();
  G__cpp_setup_tagtableStBTofCalibMaker_Cint();

  G__cpp_setup_inheritanceStBTofCalibMaker_Cint();

  G__cpp_setup_typetableStBTofCalibMaker_Cint();

  G__cpp_setup_memvarStBTofCalibMaker_Cint();

  G__cpp_setup_memfuncStBTofCalibMaker_Cint();
  G__cpp_setup_globalStBTofCalibMaker_Cint();
  G__cpp_setup_funcStBTofCalibMaker_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncStBTofCalibMaker_Cint();
  return;
}
class G__cpp_setup_initStBTofCalibMaker_Cint {
  public:
    G__cpp_setup_initStBTofCalibMaker_Cint() { G__add_setup_func("StBTofCalibMaker_Cint",(G__incsetup)(&G__cpp_setupStBTofCalibMaker_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initStBTofCalibMaker_Cint() { G__remove_setup_func("StBTofCalibMaker_Cint"); }
};
G__cpp_setup_initStBTofCalibMaker_Cint G__cpp_setup_initializerStBTofCalibMaker_Cint;

